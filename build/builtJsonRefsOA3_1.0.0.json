{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Weather API",
    "description": "A sample API",
    "contact": {
      "name": "Swagger API Team",
      "email": "apiteam@swagger.io",
      "url": "http://swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": null
    }
  ],
  "tags": [
    {
      "name": "weather",
      "description": "Weather data"
    }
  ],
  "paths": {
    "/temperature/": {
      "get": {
        "tags": [
          "temperature"
        ],
        "summary": "Temperature data",
        "description": "Get the latest temperature",
        "operationId": "pathsV1TemperatureGet",
        "responses": {
          "200": {
            "description": "Successful fetch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Temperature"
                }
              }
            }
          },
          "404": {
            "description": "Temp not found"
          }
        }
      },
      "post": {
        "tags": [
          "temperature"
        ],
        "summary": "Temperature data",
        "description": "Create a new temperature record.",
        "operationId": "pathsV1TemperaturePost",
        "parameters": [
          {
            "in": "body",
            "name": "temp",
            "description": "Temp to create",
            "schema": {
              "type": "object",
              "required": [
                "temp"
              ],
              "properties": {
                "temp": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful temp creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Temperature"
                }
              }
            }
          },
          "422": {
            "description": "Invalid form data provided"
          }
        }
      }
    },
    "/weather/": {
      "get": {
        "tags": [
          "weather"
        ],
        "summary": "Weather data",
        "description": "Weather for a given country for a given `ISO ALPHA-2 Code'",
        "operationId": "pathsV1WeatherGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful fetch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather"
                }
              }
            }
          },
          "404": {
            "description": "Country not found"
          }
        }
      }
    },
    "/weather/{country}": {
      "get": {
        "tags": [
          "weather"
        ],
        "summary": "Weather data",
        "description": "Weather for a given country for a given `ISO ALPHA-2 Code'",
        "operationId": "pathsV1WeatherCountryGet",
        "parameters": [
          {
            "in": "path",
            "name": "country",
            "description": "ISO \"ALPHA-2 Code\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful fetch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather"
                }
              }
            }
          },
          "404": {
            "description": "Country not found"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "offset": {
        "in": "query",
        "name": "offset",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "description": "The number of items to skip before starting to collect the result set."
      }
    },
    "schemas": {
      "GenericSearchMeta": {
        "properties": {
          "totalResultCount": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          }
        }
      },
      "Temperature": {
        "properties": {
          "degrees": {
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        }
      },
      "Weather": {
        "properties": {
          "cloudCover": {
            "type": "string"
          },
          "humidity": {
            "type": "number"
          },
          "precipitation": {
            "type": "number"
          },
          "temperature": {
            "$ref": "#/components/schemas/Units"
          },
          "windSpeed": {
            "$ref": "#/components/schemas/Units"
          },
          "windDirection": {
            "$ref": "#/components/schemas/Units"
          }
        }
      },
      "Weathers": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/GenericSearchMeta"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Weather"
            }
          }
        }
      },
      "Unit": {
        "properties": {
          "unit": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "Units": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/GenericSearchMeta"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Unit"
            }
          }
        }
      }
    }
  }
}